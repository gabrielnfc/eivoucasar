generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["auth", "public"]
}

model SubscriptionPlan {
  id                 String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name               String         @db.VarChar(50)
  description        String?
  priceMonthly       Decimal        @map("price_monthly") @db.Decimal(10, 2)
  priceYearly        Decimal        @map("price_yearly") @db.Decimal(10, 2)
  maxGuests          Int            @map("max_guests")
  maxPhotos          Int            @map("max_photos")
  allowsCustomDomain Boolean?       @default(false) @map("allows_custom_domain")
  allowsAnalytics    Boolean?       @default(false) @map("allows_analytics")
  isActive           Boolean?       @default(true) @map("is_active")
  createdAt          DateTime?      @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt          DateTime?      @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  subscriptions      Subscription[]

  @@map("subscription_plans")
  @@schema("public")
}

model Couple {
  id                        String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userId                    String              @map("user_id") @db.Uuid
  slug                      String              @unique @db.VarChar(100)
  customDomain              String?             @unique @map("custom_domain") @db.VarChar(255)
  brideName                 String              @map("bride_name") @db.VarChar(150)
  groomName                 String              @map("groom_name") @db.VarChar(150)
  wedding_date              DateTime            @db.Date
  ceremonyVenue             String?             @map("ceremony_venue")
  receptionVenue            String?             @map("reception_venue")
  welcomeMessage            String?             @map("welcome_message")
  story                     String?
  coverPhotoUrl             String?             @map("cover_photo_url")
  themeColors               Json?               @default("{\"text\": \"#171717\", \"accent\": \"#06b6d4\", \"primary\": \"#d946ef\", \"secondary\": \"#f97316\", \"background\": \"#fafafa\"}") @map("theme_colors")
  isActive                  Boolean?            @default(true) @map("is_active")
  isPublished               Boolean?            @default(false) @map("is_published")
  createdAt                 DateTime?           @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt                 DateTime?           @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  email                     String              @db.VarChar(255)
  emailSecondary            String?             @map("email_secondary") @db.VarChar(255)
  city                      String              @db.VarChar(100)
  state                     String              @db.VarChar(100)
  country                   String?             @default("Brasil") @db.VarChar(100)
  bridePhone                String?             @map("bride_phone") @db.VarChar(20)
  groomPhone                String?             @map("groom_phone") @db.VarChar(20)
  weddingDateTime           DateTime            @map("wedding_datetime") @db.Timestamptz(6)
  signupRole                String              @map("signup_role") @db.VarChar(20)
  termsAcceptedAt           DateTime            @map("terms_accepted_at") @db.Timestamptz(6)
  template_id               String?             @default("classico") @db.VarChar(50)
  wedding_time              String?             @db.VarChar(10)
  bride_photo               String?             @db.VarChar(500)
  groom_photo               String?             @db.VarChar(500)
  invitation_title          String?             @db.VarChar(255)
  formal_invitation_message String?
  invitation_signature      String?             @db.VarChar(255)
  story_title               String?             @db.VarChar(255)
  couple_photo              String?             @db.VarChar(500)
  first_meeting_date        DateTime?           @db.Date
  first_meeting_story       String?
  engagement_date           DateTime?           @db.Date
  engagement_story          String?
  countdown_title           String?             @db.VarChar(255)
  countdown_message         String?
  hero_background_image     String?             @db.VarChar(500)
  custom_css                String?
  theme_color               String?             @default("#fe97a2") @db.VarChar(7)
  wedding_location          String?             @db.VarChar(500)
  wedding_address           String?
  invitation_message        String?
  ceremony_time             String?             @db.VarChar(10)
  reception_time            String?             @db.VarChar(10)
  directions                String?
  parking_info              String?
  rsvp_title                String?             @db.VarChar(255)
  rsvp_subtitle             String?             @db.VarChar(255)
  rsvp_deadline             DateTime?           @db.Date
  rsvp_message              String?
  rsvp_confirmation_message String?
  groomsmen_title           String?             @db.VarChar(255)
  groomsmen_subtitle        String?             @db.VarChar(255)
  details_title             String?             @db.VarChar(255)
  dress_code                String?             @db.VarChar(255)
  dress_code_description    String?
  important_notes           String?
  gallery_title             String?             @db.VarChar(255)
  gallery_subtitle          String?             @db.VarChar(255)
  testimonials_title        String?             @db.VarChar(255)
  testimonials_subtitle     String?             @db.VarChar(255)
  testimonials_message      String?
  testimonials_auto_approve Boolean?            @default(false)
  gamification_title        String?             @db.VarChar(255)
  gamification_subtitle     String?             @db.VarChar(255)
  pix_key                   String?             @db.VarChar(255)
  footer_thank_you_message  String?
  footer_signature          String?             @db.VarChar(255)
  footer_contact_email      String?             @db.VarChar(255)
  footer_contact_phone      String?             @db.VarChar(20)
  achievements              Achievement[]
  analyticsEvents           AnalyticsEvent[]
  contributions             Contribution[]
  users                     users               @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  customDomains             CustomDomain[]
  emailNotifications        EmailNotification[]
  gifts                     Gift[]
  guestGroups               GuestGroup[]
  guests                    Guest[]
  messages                  Message[]
  photos                    Photo[]
  scheduleEvents            ScheduleEvent[]
  subscriptions             Subscription[]

  @@index([email], map: "idx_couples_email")
  @@index([city, state], map: "idx_couples_location")
  @@index([slug], map: "idx_couples_slug")
  @@index([userId], map: "idx_couples_user_id")
  @@index([weddingDateTime], map: "idx_couples_wedding_datetime")
  @@index([template_id], map: "idx_couples_template_id")
  @@index([theme_color], map: "idx_couples_theme_color")
  @@index([userId, template_id], map: "idx_couples_user_template")
  @@index([wedding_location], map: "idx_couples_wedding_location")
  @@index([wedding_time], map: "idx_couples_wedding_time")
  @@index([ceremony_time], map: "idx_couples_ceremony_time")
  @@index([pix_key], map: "idx_couples_pix_key")
  @@index([reception_time], map: "idx_couples_reception_time")
  @@index([rsvp_deadline], map: "idx_couples_rsvp_deadline")
  @@map("couples")
  @@schema("public")
}

model Subscription {
  id                   String           @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  coupleId             String           @map("couple_id") @db.Uuid
  planId               String           @map("plan_id") @db.Uuid
  stripeSubscriptionId String?          @map("stripe_subscription_id") @db.VarChar(255)
  stripeCustomerId     String?          @map("stripe_customer_id") @db.VarChar(255)
  status               String?          @default("active") @db.VarChar(20)
  currentPeriodStart   DateTime?        @map("current_period_start") @db.Timestamptz(6)
  currentPeriodEnd     DateTime?        @map("current_period_end") @db.Timestamptz(6)
  cancelAtPeriodEnd    Boolean?         @default(false) @map("cancel_at_period_end")
  createdAt            DateTime?        @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt            DateTime?        @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  couple               Couple           @relation(fields: [coupleId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  plan                 SubscriptionPlan @relation(fields: [planId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([coupleId], map: "idx_subscriptions_couple_id")
  @@map("subscriptions")
  @@schema("public")
}

model GuestGroup {
  id            String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  coupleId      String         @map("couple_id") @db.Uuid
  name          String         @db.VarChar(100)
  color         String?        @default("#3b82f6") @db.VarChar(7)
  targetAmount  Decimal?       @default(0) @map("target_amount") @db.Decimal(10, 2)
  currentAmount Decimal?       @default(0) @map("current_amount") @db.Decimal(10, 2)
  memberCount   Int?           @default(0) @map("member_count")
  emoji         String?        @default("ðŸ‘¥") @db.VarChar(10)
  createdAt     DateTime?      @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime?      @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  description   String?        @db.VarChar(255)
  achievements  Achievement[]
  contributions Contribution[]
  couple        Couple         @relation(fields: [coupleId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  guests        Guest[]

  @@index([coupleId], map: "idx_guest_groups_couple_id")
  @@map("guest_groups")
  @@schema("public")
}

model Guest {
  id                  String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  coupleId            String              @map("couple_id") @db.Uuid
  groupId             String?             @map("group_id") @db.Uuid
  name                String              @db.VarChar(100)
  email               String?             @db.VarChar(255)
  phone               String?             @db.VarChar(20)
  rsvpStatus          String?             @default("pending") @map("rsvp_status") @db.VarChar(20)
  companionsCount     Int?                @default(0) @map("companions_count")
  dietaryRestrictions String?             @map("dietary_restrictions")
  notes               String?
  totalContributed    Decimal?            @default(0) @map("total_contributed") @db.Decimal(10, 2)
  invitationSentAt    DateTime?           @map("invitation_sent_at") @db.Timestamptz(6)
  respondedAt         DateTime?           @map("responded_at") @db.Timestamptz(6)
  createdAt           DateTime?           @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt           DateTime?           @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  firstName           String?             @map("first_name") @db.VarChar(100)
  lastName            String?             @map("last_name") @db.VarChar(100)
  ageGroup            String?             @default("adult") @map("age_group") @db.VarChar(20)
  gender              String?             @default("male") @map("gender") @db.VarChar(10)
  menuType            String?             @default("adult") @map("menu_type") @db.VarChar(20)
  companions          Json?               @default("[]") @map("companions")
  achievements        Achievement[]
  contributions       Contribution[]
  emailNotifications  EmailNotification[]
  couple              Couple              @relation(fields: [coupleId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  group               GuestGroup?         @relation(fields: [groupId], references: [id], onUpdate: NoAction)

  @@index([coupleId], map: "idx_guests_couple_id")
  @@index([groupId], map: "idx_guests_group_id")
  @@index([firstName], map: "idx_guests_first_name")
  @@index([lastName], map: "idx_guests_last_name")
  @@index([ageGroup], map: "idx_guests_age_group")
  @@index([gender], map: "idx_guests_gender")
  @@index([menuType], map: "idx_guests_menu_type")
  @@index([companions], map: "idx_guests_companions_gin", type: Gin)
  @@map("guests")
  @@schema("public")
}

model Contribution {
  id               String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  guestId          String?     @map("guest_id") @db.Uuid
  coupleId         String      @map("couple_id") @db.Uuid
  groupId          String?     @map("group_id") @db.Uuid
  amount           Decimal     @db.Decimal(10, 2)
  goalType         String?     @default("other") @map("goal_type") @db.VarChar(50)
  goalDescription  String?     @map("goal_description") @db.VarChar(255)
  abacatePaymentId String?     @unique @map("abacate_payment_id") @db.VarChar(255)
  abacateBillingId String?     @map("abacate_billing_id") @db.VarChar(255)
  pixKey           String?     @map("pix_key") @db.VarChar(255)
  qrCode           String?     @map("qr_code")
  status           String?     @default("pending") @db.VarChar(20)
  paidAt           DateTime?   @map("paid_at") @db.Timestamptz(6)
  expiresAt        DateTime?   @map("expires_at") @db.Timestamptz(6)
  createdAt        DateTime?   @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt        DateTime?   @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  couple           Couple      @relation(fields: [coupleId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  group            GuestGroup? @relation(fields: [groupId], references: [id], onUpdate: NoAction)
  guest            Guest?      @relation(fields: [guestId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([coupleId], map: "idx_contributions_couple_id")
  @@index([guestId], map: "idx_contributions_guest_id")
  @@index([status], map: "idx_contributions_status")
  @@map("contributions")
  @@schema("public")
}

model Gift {
  id              String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  coupleId        String    @map("couple_id") @db.Uuid
  name            String    @db.VarChar(255)
  description     String?
  price           Decimal?  @db.Decimal(10, 2)
  imageUrl        String?   @map("image_url")
  externalUrl     String?   @map("external_url")
  category        String?   @db.VarChar(100)
  isReserved      Boolean?  @default(false) @map("is_reserved")
  reservedByName  String?   @map("reserved_by_name") @db.VarChar(100)
  reservedByEmail String?   @map("reserved_by_email") @db.VarChar(255)
  reservedAt      DateTime? @map("reserved_at") @db.Timestamptz(6)
  notes           String?
  createdAt       DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime? @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  couple          Couple    @relation(fields: [coupleId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([coupleId], map: "idx_gifts_couple_id")
  @@map("gifts")
  @@schema("public")
}

model Message {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  coupleId   String    @map("couple_id") @db.Uuid
  guestName  String    @map("guest_name") @db.VarChar(100)
  guestEmail String?   @map("guest_email") @db.VarChar(255)
  content    String
  isApproved Boolean?  @default(true) @map("is_approved")
  isFeatured Boolean?  @default(false) @map("is_featured")
  createdAt  DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime? @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  couple     Couple    @relation(fields: [coupleId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([coupleId], map: "idx_messages_couple_id")
  @@map("messages")
  @@schema("public")
}

model Photo {
  id           String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  coupleId     String    @map("couple_id") @db.Uuid
  title        String?   @db.VarChar(255)
  description  String?
  url          String
  thumbnailUrl String?   @map("thumbnail_url")
  category     String?   @default("other") @db.VarChar(50)
  orderIndex   Int?      @default(0) @map("order_index")
  isFeatured   Boolean?  @default(false) @map("is_featured")
  uploadedBy   String?   @default("couple") @map("uploaded_by") @db.VarChar(100)
  createdAt    DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime? @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  couple       Couple    @relation(fields: [coupleId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([coupleId], map: "idx_photos_couple_id")
  @@map("photos")
  @@schema("public")
}

model ScheduleEvent {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  coupleId    String    @map("couple_id") @db.Uuid
  title       String    @db.VarChar(255)
  description String?
  startTime   DateTime  @map("start_time") @db.Timestamptz(6)
  endTime     DateTime? @map("end_time") @db.Timestamptz(6)
  location    String?   @db.VarChar(255)
  isPublic    Boolean?  @default(true) @map("is_public")
  orderIndex  Int?      @default(0) @map("order_index")
  createdAt   DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime? @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  couple      Couple    @relation(fields: [coupleId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([coupleId], map: "idx_schedule_events_couple_id")
  @@map("schedule_events")
  @@schema("public")
}

model Achievement {
  id          String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  coupleId    String      @map("couple_id") @db.Uuid
  guestId     String?     @map("guest_id") @db.Uuid
  groupId     String?     @map("group_id") @db.Uuid
  type        String      @db.VarChar(50)
  title       String      @db.VarChar(255)
  description String?
  badgeUrl    String?     @map("badge_url")
  rewardType  String?     @default("badge") @map("reward_type") @db.VarChar(50)
  rewardData  Json?       @map("reward_data")
  isClaimed   Boolean?    @default(false) @map("is_claimed")
  claimedAt   DateTime?   @map("claimed_at") @db.Timestamptz(6)
  createdAt   DateTime?   @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime?   @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  couple      Couple      @relation(fields: [coupleId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  group       GuestGroup? @relation(fields: [groupId], references: [id], onUpdate: NoAction)
  guest       Guest?      @relation(fields: [guestId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([coupleId], map: "idx_achievements_couple_id")
  @@index([guestId], map: "idx_achievements_guest_id")
  @@map("achievements")
  @@schema("public")
}

model EmailNotification {
  id           String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  coupleId     String    @map("couple_id") @db.Uuid
  guestId      String?   @map("guest_id") @db.Uuid
  type         String    @db.VarChar(50)
  subject      String    @db.VarChar(255)
  content      String
  templateId   String?   @map("template_id") @db.VarChar(100)
  status       String?   @default("pending") @db.VarChar(20)
  sentAt       DateTime? @map("sent_at") @db.Timestamptz(6)
  errorMessage String?   @map("error_message")
  createdAt    DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime? @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  couple       Couple    @relation(fields: [coupleId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  guest        Guest?    @relation(fields: [guestId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([coupleId], map: "idx_email_notifications_couple_id")
  @@index([status], map: "idx_email_notifications_status")
  @@map("email_notifications")
  @@schema("public")
}

model CustomDomain {
  id                String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  coupleId          String    @map("couple_id") @db.Uuid
  domain            String    @unique @db.VarChar(255)
  isVerified        Boolean?  @default(false) @map("is_verified")
  sslStatus         String?   @default("pending") @map("ssl_status") @db.VarChar(20)
  verificationToken String?   @map("verification_token") @db.VarChar(255)
  dnsConfigured     Boolean?  @default(false) @map("dns_configured")
  createdAt         DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt         DateTime? @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  couple            Couple    @relation(fields: [coupleId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([coupleId], map: "idx_custom_domains_couple_id")
  @@map("custom_domains")
  @@schema("public")
}

model AnalyticsEvent {
  id        String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  coupleId  String    @map("couple_id") @db.Uuid
  eventType String    @map("event_type") @db.VarChar(50)
  eventData Json?     @map("event_data")
  userAgent String?   @map("user_agent")
  ipAddress String?   @map("ip_address") @db.Inet
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  couple    Couple    @relation(fields: [coupleId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([coupleId], map: "idx_analytics_events_couple_id")
  @@index([eventType], map: "idx_analytics_events_type")
  @@map("analytics_events")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model identities {
  provider_id     String
  user_id         String    @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  email           String?   @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_challenges {
  id                     String      @id @db.Uuid
  factor_id              String      @db.Uuid
  created_at             DateTime    @db.Timestamptz(6)
  verified_at            DateTime?   @db.Timestamptz(6)
  ip_address             String      @db.Inet
  otp_code               String?
  web_authn_session_data Json?
  mfa_factors            mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_factors {
  id                   String           @id @db.Uuid
  user_id              String           @db.Uuid
  friendly_name        String?
  factor_type          factor_type
  status               factor_status
  created_at           DateTime         @db.Timestamptz(6)
  updated_at           DateTime         @db.Timestamptz(6)
  secret               String?
  phone                String?
  last_challenged_at   DateTime?        @unique @db.Timestamptz(6)
  web_authn_credential Json?
  web_authn_aaguid     String?          @db.Uuid
  mfa_challenges       mfa_challenges[]
  users                users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, phone], map: "unique_phone_factor_per_user")
  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  refreshed_at   DateTime?        @db.Timestamp(6)
  user_agent     String?
  ip             String?          @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model users {
  instance_id                 String?           @db.Uuid
  id                          String            @id @db.Uuid
  aud                         String?           @db.VarChar(255)
  role                        String?           @db.VarChar(255)
  email                       String?           @db.VarChar(255)
  encrypted_password          String?           @db.VarChar(255)
  email_confirmed_at          DateTime?         @db.Timestamptz(6)
  invited_at                  DateTime?         @db.Timestamptz(6)
  confirmation_token          String?           @db.VarChar(255)
  confirmation_sent_at        DateTime?         @db.Timestamptz(6)
  recovery_token              String?           @db.VarChar(255)
  recovery_sent_at            DateTime?         @db.Timestamptz(6)
  email_change_token_new      String?           @db.VarChar(255)
  email_change                String?           @db.VarChar(255)
  email_change_sent_at        DateTime?         @db.Timestamptz(6)
  last_sign_in_at             DateTime?         @db.Timestamptz(6)
  raw_app_meta_data           Json?
  raw_user_meta_data          Json?
  is_super_admin              Boolean?
  created_at                  DateTime?         @db.Timestamptz(6)
  updated_at                  DateTime?         @db.Timestamptz(6)
  phone                       String?           @unique
  phone_confirmed_at          DateTime?         @db.Timestamptz(6)
  phone_change                String?           @default("")
  phone_change_token          String?           @default("") @db.VarChar(255)
  phone_change_sent_at        DateTime?         @db.Timestamptz(6)
  confirmed_at                DateTime?         @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current  String?           @default("") @db.VarChar(255)
  email_change_confirm_status Int?              @default(0) @db.SmallInt
  banned_until                DateTime?         @db.Timestamptz(6)
  reauthentication_token      String?           @default("") @db.VarChar(255)
  reauthentication_sent_at    DateTime?         @db.Timestamptz(6)
  is_sso_user                 Boolean           @default(false)
  deleted_at                  DateTime?         @db.Timestamptz(6)
  is_anonymous                Boolean           @default(false)
  identities                  identities[]
  mfa_factors                 mfa_factors[]
  one_time_tokens             one_time_tokens[]
  sessions                    sessions[]
  couples                     Couple[]

  @@index([instance_id])
  @@index([is_anonymous])
  @@schema("auth")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}
